@model List<BlogEngine.Core.ViewModels.MessageView>
@using GridMvc.Html

@{
    ViewBag.Title = "Index";
}

@helper FormatDate(DateTime date)
{
    TimeSpan span = DateTime.Now - date;
    
    if (span.TotalHours <= 24) {
       @date.ToShortTimeString()
    }
    else  if (span.TotalDays < 365) {
        if (date.Day < 10) {
            <text>0</text>@date.Day<text> </text>@date.ToString("MMM")
        }
        else {
            @date.Day<text> </text>@date.ToString("MMM")
        }
    }
    else {
        @date.ToString("dd/MM/yyyy")
    }
}

<link href="@Url.Content("~/Content/Gridmvc.css")" rel="stylesheet" type="text/css" />
<script src='@Url.Content("~/Scripts/gridmvc.min.js")'></script>

<script src="~/Scripts/jquery.ui.position.js"></script>
<script src="~/Scripts/jquery.contextMenu.js"></script>
<link href="~/Content/jquery.contextMenu.css" rel="stylesheet" />

<h3 style="display: inline-block"><span class="glyphicon glyphicon-envelope"></span> Messages</h3>

<div class="well well-sm">
    <button class="btn btn-success" onclick="location.href='@Url.Action("Send", "Message")'">
        <span class="glyphicon glyphicon-envelope"></span>&nbsp;New Message
    </button>
</div>

@Html.Action("_Folders", "Message", new { page = "index"})

<style type="text/css">
    .unread {
        font-weight: bold;
    }
</style>

<div class="col-md-10 col-lg-10 col-sm-10">
    @Html.Grid(Model).Columns(columns =>
        {
            columns.Add(u => u.MessageId, true);
            columns.Add(u => u.From).SetWidth(60).Titled("From").Css("showContext");
            columns.Add(u => u.Subject).Encoded(false).Sanitized(false).Titled("Subject").Filterable(true).RenderValueAs(o => Html.ActionLink(o.Subject,"Details","Message",new { messageId = o.MessageId }, null));
            columns.Add(u => u.Sent).SetWidth(100).Titled("Recieved").Filterable(true).RenderValueAs(u => FormatDate(u.Sent));
        }).SetRowCssClasses(item => item.Read ? string.Empty : "unread").Sortable(true).WithPaging(5)
</div> 

<script>
    $(function () {
        $('grid-row').contextMenu({
            selector: 'tr',
            callback: function (key, options) {
                /// key here ==name of action
                // ans here = messageId
                var classes = $(this).attr('class').split(' ');
                var found = $.inArray('unread', classes);
                var action = key;
                var id = parseInt($(this).text());
                switch (key)
                {
                    case "Mark As Unread":
                        if (found == -1)
                        {
                            $.post("/message/MarkAsUnread", { Id: id }, function () {
                                window.location.reload(true);
                            });
                        }
                        break;
                    case "Mark As Read":
                        if (found > -1)
                        {
                            $.post("/message/MarkAsRead", { Id: id }, function () {
                                window.location.reload(true);
                            });
                        }
                        break;
                    case "Delete":
                        $.post("/message/Delete", { Id: id }, function () {
                            window.location.reload(true);
                        });
                    default:
                        break;
                }
            },
            items: {
                "Mark As Read": { name: "Mark As Read" },
                "Mark As Unread": { name: "Mark As Unread" },
                "sep1": "---------",
                "Forward": { name: "Forward" },
                "Reply": { name: "Reply" },
                "Delete" : { name: "Delete", icon: "delete"}
            }
        });
    });
</script>