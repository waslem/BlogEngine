@model List<BlogEngine.Core.ViewModels.UsersViewModel>
@using GridMvc.Html

@{
    ViewBag.Title = "Users";
    Layout = "~/Areas/Admin/Views/Shared/_AdminLayout.cshtml";
}

@helper GridManageItemColumn(int userId)
{
    @Html.ActionLink("Edit", "Edit", new { id = userId }, new { @class = "editField btn btn-xs btn-info" })
    <span> </span>
    @Html.ActionLink("Delete", "Delete", new { id = userId }, new { @class = "editField btn btn-xs btn-danger" })
    <span> </span>
    @Html.ActionLink("Deactivate", "Deactivate", new { id = userId }, new { @class = "editField btn btn-xs btn-warning"})
}

<link href="@Url.Content("~/Content/Gridmvc.css")" rel="stylesheet" type="text/css" />
<script src="@Url.Content("~/Scripts/gridmvc.min.js")"></script>

<h2>Users</h2>

<div class="col-md-10 col-lg-10 col-sm-12">
    @Html.Grid(Model).Columns(columns => 
        {
            columns.Add(u => u.UserId).SetWidth(60).Titled("User Id");
            columns.Add(u => u.Username).Titled("Username").Filterable(true);
            columns.Add(u => u.Name).Titled("Name").Filterable(true);
            columns.Add(u => u.EmailAddress).Titled("Email Address");
            columns.Add(u => u.Roles).Titled("Roles");
            columns.Add().Encoded(false).Sanitized(false).Titled("Actions").RenderValueAs(u => GridManageItemColumn(u.UserId));
        }).WithPaging(3).Sortable(true)
</div>
<div class="col-md-2 col-lg-2 col-sm-12">

</div>